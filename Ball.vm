function Ball.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 0
pop this 2
push constant 10
pop this 4
push constant 1
push constant 3
call Vector2.new 2
pop this 3
push pointer 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 2
call Vector2.getX 1
push this 2
call Vector2.getY 1
push this 2
call Vector2.getX 1
push this 4
add
push this 2
call Vector2.getY 1
push this 4
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
call Vector2.getX 1
push this 2
call Vector2.getY 1
push this 2
call Vector2.getX 1
push this 4
add
push this 2
call Vector2.getY 1
push this 4
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.erase 1
pop temp 0
push this 2
push this 3
call Vector2.add 2
pop temp 0
push this 2
call Vector2.getX 1
push constant 500
gt
push this 2
call Vector2.getX 1
or
push constant 10
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push this 3
call Vector2.getX 1
neg
call Vector2.setX 2
pop temp 0
label IF_FALSE0
push this 2
call Vector2.getY 1
push constant 10
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push this 3
call Vector2.getY 1
neg
call Vector2.setY 2
pop temp 0
label IF_FALSE1
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.HasCollidedWithPlayer 0
push argument 0
pop pointer 0
push this 2
call Vector2.getX 1
push argument 1
call Vector2.getX 1
gt
push this 2
call Vector2.getX 1
and
push argument 1
call Vector2.getX 1
push argument 2
add
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Vector2.getY 1
push argument 1
call Vector2.getY 1
push this 4
push constant 2
add
sub
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push this 3
call Vector2.getY 1
neg
call Vector2.setY 2
pop temp 0
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Ball.hasGoneOutOfBounds 0
push argument 0
pop pointer 0
push this 2
call Vector2.getY 1
push constant 230
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Ball.erase 1
pop temp 0
push constant 280
push constant 140
call Vector2.new 2
pop this 2
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Ball.hasHitABrick 3
push argument 0
pop pointer 0
push constant 16384
pop local 0
push local 0
push this 2
call Vector2.getY 1
push constant 2
sub
push constant 32
call Math.multiply 2
push this 2
call Vector2.getX 1
push constant 16
call Math.divide 2
add
add
pop local 1
push local 1
call Memory.peek 1
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
call Vector2.getX 1
push this 2
call Vector2.getY 1
push constant 10
sub
push this 2
call Vector2.getX 1
push constant 10
add
push this 2
call Vector2.getY 1
call Screen.drawRectangle 4
pop temp 0
push this 3
push this 3
call Vector2.getY 1
neg
call Vector2.setY 2
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Ball.getX 0
push argument 0
pop pointer 0
push this 2
call Vector2.getX 1
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 2
call Vector2.getY 1
return
function Ball.dispose 0
push argument 0
pop pointer 0
push this 2
call Vector2.dispose 1
pop temp 0
push this 3
call Vector2.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
